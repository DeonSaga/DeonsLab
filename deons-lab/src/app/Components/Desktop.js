/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 src/app/deonslab.gltf 
*/
"use client";
import React, { useRef, useState, useEffect } from "react";
import {
  PerspectiveCamera,
  RenderTexture,
  Text,
  useGLTF,
  useTexture,
} from "@react-three/drei";
import * as THREE from "three";

export function DesktopModel({ goTo, props }) {
  const { nodes, materials } = useGLTF("/deonslab.gltf");

  const texture = useTexture("/deonslabcolourpallete.jpg");
  texture.flipY = true;

  const switchTo = (e) => {
    goTo(e);
  };
  const baseMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    roughness: 1,
    metalness: 0.2,
    // envMapIntensity: 0.6,
  });
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={baseMaterial} />
      <mesh
        geometry={nodes.PC_Case.geometry}
        material={baseMaterial}
        scale={[0.386, 1, 1]}
      />
      <mesh
        geometry={nodes.BackFan.geometry}
        material={baseMaterial}
        scale={[0.386, 1, 1]}
      />
      <group position={[0, 0, -2.098]} onClick={(e) => switchTo("About")}>
        <mesh geometry={nodes.Cube003.geometry} material={baseMaterial} />
        <mesh
          geometry={nodes.Cube003_1.geometry}
          material={materials.M_Screen1}
        >
          <Monitor title={"About me"} />
        </mesh>
      </group>
      <mesh geometry={nodes.Knobs.geometry} material={baseMaterial} />
      <mesh geometry={nodes.Speaker1.geometry} material={baseMaterial} />
      <mesh
        geometry={nodes.AudioInterface.geometry}
        material={baseMaterial}
        position={[0, 1.422, 1.43]}
        scale={[0.178, 0.087, 0.272]}
      />
      <mesh
        geometry={nodes.KeyboardBse.geometry}
        material={baseMaterial}
        scale={0.283}
      />
      <mesh geometry={nodes.KeyBoardKeys.geometry} material={baseMaterial} />
      <mesh geometry={nodes.Mouse.geometry} material={baseMaterial} />
      <mesh
        geometry={nodes.CPU.geometry}
        material={baseMaterial}
        scale={[0.386, 1, 1]}
      />
      <mesh
        geometry={nodes.Motherboard.geometry}
        material={baseMaterial}
        scale={0.283}
      />
      <group position={[0, 0, -3.725]} onClick={(e) => switchTo("Artwork")}>
        <mesh geometry={nodes.Cube010.geometry} material={baseMaterial} />
        <mesh
          geometry={nodes.Cube010_1.geometry}
          material={materials.M_Screen1}
        >
          <Monitor title={"Artwork"} />
        </mesh>
      </group>
      <group
        position={[1.808, 0, -3.725]}
        onClick={(e) => switchTo("Projects")}
      >
        <mesh geometry={nodes.Cube011.geometry} material={baseMaterial} />
        <mesh geometry={nodes.Cube011_1.geometry}>
          <Monitor title={"Projects"} />
        </mesh>
      </group>
      <mesh
        geometry={nodes.Speaker2.geometry}
        material={baseMaterial}
        position={[0, 0, -4.035]}
      />
      <mesh
        geometry={nodes.PCFans.geometry}
        material={baseMaterial}
        scale={[0.386, 1, 1]}
      />
    </group>
  );
}

useGLTF.preload("/deonslab.gltf");

const Monitor = ({ title }) => {
  const [hovered, setHovered] = useState("auto");
  const texture = useTexture("/deonslabcolourpallete.jpg");
  texture.flipY = true;

  useEffect(() => {
    document.body.style.cursor = hovered ? "pointer" : "auto";
  }, [hovered]);

  const baseMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    roughness: 1,
    metalness: 0.2,
  });

  return (
    <>
      <meshStandardMaterial attach="material">
        <RenderTexture attach="map" samples={8} width={1920} height={1080}>
          <PerspectiveCamera
            makeDefault={true}
            manual
            aspect={1920 / 1080}
            position={[0, 0, 5]}
          />
          <group
            rotation={[Math.PI, 0, 0]}
            scale={[-1, 1, 1]}
            onPointerOver={() => setHovered(true)}
            onPointerOut={() => setHovered(false)}
          >
            <Text
              scale={[1, 1, 1]}
              color="white" // default
              anchorX="center" // default
              anchorY="middle"
              fontSize={1.2}
              font="/VAST_MX.woff"
              outlineColor={"white"}
              outlineOpacity={0.1}
              outlineWidth={0.03}
              outlineOffsetX={0.2}
            >
              {title}
            </Text>
            <Text
              scale={[1, 1, 1]}
              color="purple"
              fillOpacity={0.2} // default
              anchorX="center" // default
              anchorY="middle"
              fontSize={1.2}
              position={[-0.2, 0, 0]}
              font="/VAST_MX.woff"
              outlineColor={"#624cab"}
              outlineOpacity={0.3}
              outlineWidth={0.03}
              outlineOffsetX={-0.2}
            >
              {title}
            </Text>
            <ambientLight intensity={3.1}></ambientLight>
            {/* <mesh onClick={() => alert("hey listen")} material={baseMaterial}>
              <boxGeometry args={[1, 1, 1]}>
                <meshBasicMaterial
                      attach="material"
                      color="#fffff"
                    ></meshBasicMaterial>
              </boxGeometry>
            </mesh> */}
          </group>
          <color attach="background" args={["#2b2c28"]} />
        </RenderTexture>
      </meshStandardMaterial>
    </>
  );
};
